// <auto-generated />
using System;
using LoanManagement.Data.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanManagement.Data.SqlServer.Migrations
{
    [DbContext(typeof(LoanManagementDbContext))]
    partial class LoanManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanManagement.core.Models.ResetToken", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("ResetTokens", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasAnnotation("Relational:JsonPropertyName", "first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasAnnotation("Relational:JsonPropertyName", "last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasAnnotation("Relational:JsonPropertyName", "password");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 18, 19, 38, 22, 904, DateTimeKind.Local).AddTicks(8486));

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Applications", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.ToTable("Departements", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Directions", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenoms")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employes", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.HabilitationProfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Edition")
                        .HasColumnType("bit");

                    b.Property<bool>("Generation")
                        .HasColumnType("bit");

                    b.Property<bool>("Insertion")
                        .HasColumnType("bit");

                    b.Property<bool>("Modification")
                        .HasColumnType("bit");

                    b.Property<int>("ProfilId")
                        .HasColumnType("int");

                    b.Property<bool>("Suppression")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProfilId");

                    b.ToTable("HabilitationProfils", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOperation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSysteme")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodeHTTP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navigateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Peripherique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeJournalId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeJournalId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Journaux", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HabilitationProfilId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("HabilitationProfilId");

                    b.HasIndex("MenuId");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.MotDePasse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("OldPasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("MotDePasses", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.ParamMotDePasse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DelaiExpiration")
                        .HasColumnType("int");

                    b.Property<bool>("ExcludeUsername")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeDigits")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeLowerCase")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeSpecialCharacters")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeUpperCase")
                        .HasColumnType("bit");

                    b.Property<int>("Taille")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParamMotDePasses", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Profil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profils", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.TypeJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeJournaux", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDesactivation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpirationCompte")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModificationMotDePasse")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditPassword")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefreshTokenTime")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs", (string)null);
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Application", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.Application", "Module")
                        .WithMany("Modules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Departement", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.Direction", "Direction")
                        .WithMany("Departements")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Employe", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.Departement", "Departement")
                        .WithMany("Employes")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanManagement.core.Models.Users_Management.Utilisateur", "User")
                        .WithOne("Employe")
                        .HasForeignKey("LoanManagement.core.Models.Users_Management.Employe", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.HabilitationProfil", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.Profil", "Profil")
                        .WithMany("Habilitations")
                        .HasForeignKey("ProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profil");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Journal", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.TypeJournal", "TypeJournal")
                        .WithMany("Journaux")
                        .HasForeignKey("TypeJournalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanManagement.core.Models.Users_Management.Utilisateur", "Utilisateur")
                        .WithMany("Journaux")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TypeJournal");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Menu", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.Application", "Application")
                        .WithMany("Menus")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanManagement.core.Models.Users_Management.HabilitationProfil", "HabilitationProfil")
                        .WithMany("Menus")
                        .HasForeignKey("HabilitationProfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanManagement.core.Models.Users_Management.Menu", null)
                        .WithMany("SousMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("HabilitationProfil");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.MotDePasse", b =>
                {
                    b.HasOne("LoanManagement.core.Models.Users_Management.Utilisateur", "Utilisateur")
                        .WithMany("Passwords")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Application", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Departement", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Direction", b =>
                {
                    b.Navigation("Departements");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.HabilitationProfil", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Menu", b =>
                {
                    b.Navigation("SousMenus");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Profil", b =>
                {
                    b.Navigation("Habilitations");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.TypeJournal", b =>
                {
                    b.Navigation("Journaux");
                });

            modelBuilder.Entity("LoanManagement.core.Models.Users_Management.Utilisateur", b =>
                {
                    b.Navigation("Employe");

                    b.Navigation("Journaux");

                    b.Navigation("Passwords");
                });
#pragma warning restore 612, 618
        }
    }
}
