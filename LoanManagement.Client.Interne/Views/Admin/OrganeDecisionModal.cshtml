@model OrganeDecisionViewModel
<div class="modal fade" id="addOrgane" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-add-new-role">
        <div class="modal-content p-3 p-md-5">
            <button type="button" class="btn-close btn-pinned" data-bs-dismiss="modal" aria-label="Close"></button>
            <div class="modal-body">
                <form class="card-body" id="myForm">
                    <h6 class="mb-b fw-semibold">Organe de décision</h6>
                    <div class="row mb-3">
                        <label class="col-sm-3 col-form-label text-sm-end" asp-for="@Model.Resource.Libelle">Libellé</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="libelle" asp-for="@Model.Resource.Libelle" />
                        </div>
                    </div>
                    <div class="pt-4">
                        <div class="row justify-content-end">
                            <div class="col-sm-9">
                                <button type="submit" class="btn btn-primary me-sm-2 me-1" id="submit">Submit</button>
                                <button type="reset" class="btn btn-label-secondary">Cancel</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    (function () {
        var form = window.$('#myForm'),
            btn = window.$('#submit'),
            //indice = $('#indice'),
            //tel = $('#tel'),
            title = '',
            message = '',
            errorTitle = new DOMParser().parseFromString('Erreur', 'text/html').body.innerHTML,
            errorTypeMessage = 'error',
            errorMessage = new DOMParser().parseFromString('Erreur Produite', 'text/html').body.innerHTML,
            errorDescription = '',
            errorTimeOut = 500000,
            errors = [];

        form.on("submit",
            function (event) {
                event.preventDefault();
                var data = window.$(this).serialize();
                var url = '@Url.Action("AddOrganeDecision", "Admin")';
                console.log(data);
                window.$.ajax({
                    url: url,
                    type: "POST",
                    dataType: "json",
                    data: data,
                    beforeSend: function () {
                        btn.attr('disabled', 'disabled');
                        window.$.blockUI({
                            message: '<div class="spinner-border text-primary" role="status"></div>',
                            css: {
                                backgroundColor: 'transparent',
                                border: '0'
                            },
                            overlayCSS: {
                                backgroundColor: '#fff',
                                opacity: 0.8
                            }
                        });
                    },
                    success: function (response) {
                        console.log(response);
                        if (response.typeMessage === "error") {
                            window.toastr[response.typeMessage]('👋 ' + 'Erreur',
                                {
                                    showMethod: 'slideDown',
                                    hideMethod: 'slideUp',
                                    closeButton: true,
                                    tapToDismiss: false,
                                    progressBar: true,
                                    timeOut: response.timeOut,
                                    rtl: window.$('html').attr('data-textdirection') === 'rtl',
                                    onHidden: function () { }
                                });
                        }
                        //var strJson = JSON.parse(response.strJson);
                        //var nom = strJson.Nom;
                        //var prenoms = strJson.Prenoms;
                        //$('#username').val(strJson.Username);
                        message = new DOMParser().parseFromString(response.message, 'text/html').body.innerHTML;
                        window.toastr[response.typeMessage]('👋 ' + message,
                            response.title,
                            {
                                showMethod: 'slideDown',
                                hideMethod: 'slideUp',
                                closeButton: true,
                                tapToDismiss: false,
                                progressBar: true,
                                timeOut: response.timeOut,
                                rtl: window.$('html').attr('data-textdirection') === 'rtl',
                                onHidden: function () { }
                            });

                    },
                    error: function (response) {
                        try {

                            var obj = JSON.parse(JSON.stringify(response.responseJSON));
                            if (obj.length !== 0) {
                                if (response.status === 401) {
                                    message = new DOMParser().parseFromString('Non autorisé', 'text/html').body.innerHTML;
                                    window.toastr[errorTypeMessage]('👋 ' + message,
                                        errorTitle,
                                        {
                                            showMethod: 'slideDown',
                                            hideMethod: 'slideUp',
                                            closeButton: true,
                                            tapToDismiss: false,
                                            progressBar: true,
                                            timeOut: errorTimeOut,
                                            rtl: window.$('html').attr('data-textdirection') === 'rtl'
                                        });
                                }
                                else {
                                    if (obj.typeMessage != null && obj.typeMessage !== undefined) {
                                        if (response.status === 0) {
                                        } else if (response.status === 400 || response.status === 404 || response.status === 405 || response.status === 500) {
                                            errorTitle = obj.title;
                                            errorTypeMessage = obj.typeMessage;
                                            errorMessage = obj.message;
                                            errorDescription = obj.description;
                                            errorTimeOut = obj.timeOut;
                                            if (obj.erreurs != null && obj.erreurs != undefined) errors = obj.erreurs;
                                        }
                                        if (errors !== null && errors !== undefined && errors.length > 0) {
                                            var messages = '';
                                            if (errors.length == 1) {
                                                messages = errors;
                                            }
                                            else {
                                                for (var i = 0; i < errors.length; i++) {
                                                    messages += errors[i] + "<br>";
                                                }
                                                messages = messages.slice(0, -4);
                                            }
                                            errorMessage = new DOMParser().parseFromString(messages, 'text/html').body.innerHTML;

                                        } else if (errorDescription !== null && errorDescription !== undefined) {
                                            errorMessage = new DOMParser().parseFromString(errorDescription, 'text/html').body.innerHTML;
                                        } else {
                                            errorMessage = new DOMParser().parseFromString(errorMessage, 'text/html').body.innerHTML;
                                        }
                                        window.toastr[errorTypeMessage]('👋 ' + errorMessage,
                                            errorTitle,
                                            {
                                                showMethod: 'slideDown',
                                                hideMethod: 'slideUp',
                                                closeButton: true,
                                                tapToDismiss: false,
                                                progressBar: true,
                                                timeOut: errorTimeOut,
                                                rtl: window.$('html').attr('data-textdirection') === 'rtl'
                                            }
                                        );
                                    }
                                }
                            }
                        } catch (err) {
                            window.toastr[errorTypeMessage]('👋 ' + err,
                                errorTitle,
                                {
                                    showMethod: 'slideDown',
                                    hideMethod: 'slideUp',
                                    closeButton: true,
                                    tapToDismiss: false,
                                    progressBar: true,
                                    timeOut: errorTimeOut,
                                    rtl: window.$('html').attr('data-textdirection') === 'rtl'
                                }
                            );
                        }
                    },
                    complete: function () {
                        btn.removeAttr('disabled');
                        window.$.unblockUI();
                    }
                });
            }
        );

    });
</script>