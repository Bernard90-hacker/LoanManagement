@model EmployeViewModel
@section PageStyles {
    <link rel="stylesheet" href="~/vendor/css/pages/page-auth.dist.css">
}
@{
    var users = ViewBag.Users as IEnumerable<GetUtilisateurResource>;
    var departments = ViewBag.Departments as IEnumerable<DepartementResource>;
}

@section VendorStyles{
    <link rel="stylesheet" href="~/vendor/libs/bs-stepper/bs-stepper.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/flatpickr/flatpickr.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/select2/select2.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/formvalidation/dist/css/formValidation.min.css" />
    <link rel="stylesheet" href="~/vendor/libs/tagify/tagify.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/animate-css/animate.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/spinkit/spinkit.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/toastr/toastr.dist.css" />
    <link rel="stylesheet" href="~/vendor/libs/sweetalert2/sweetalert2.dist.css" />
}
<div class="row">
    <div class="col-md-12">
    </div>
    <div class="col-md-12">
        <div class="card mb-4">
            <div class="card-body">
                <div class="row my-4">
                    <div class="col">
                        <h6> Employé </h6>
                        <div class="accordion" id="collapsibleSection">
                            <form id="myform" asp-action="AddEmploye" asp-controller="Admin" method="post">
                                <div class="card accordion-item">
                                    <h2 class="accordion-header" id="headingDeliveryAddress">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDeliveryAddress" aria-expanded="true" aria-controls="collapseDeliveryAddress">
                                            Ajouter un employé
                                        </button>
                                    </h2>
                                    <div id="collapseDeliveryAddress" class="accordion-collapse collapse show" aria-labelledby="headingDeliveryAddress" data-bs-parent="#collapsibleSection">
                                        <div class="accordion-body">
                                            <div class="row g-3">
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <label class="col-sm-3 col-form-label text-sm-end" for="matricule">Matricule</label>
                                                        <div class="col-sm-9">
                                                            <input type="text" id="matricule" class="form-control" asp-for="@Model.EmployeResource.Matricule"/>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <label class="col-sm-3 col-form-label text-sm-end" for="email">Email</label>
                                                        <div class="col-sm-9">
                                                            <div class="input-group input-group-merge">
                                                                <input type="email" id="formtabs-password" class="form-control" placeholder="gijoe@gmail.com" aria-describedby="gijoe@gmail.com" asp-for="@Model.EmployeResource.Email"/>
                                                                
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <label class="col-sm-3 col-form-label text-sm-end" for="nom">Nom</label>
                                                        <div class="col-sm-9">
                                                            <input  class="form-control" id="nom" type="text" asp-for="@Model.EmployeResource.Nom"/>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <label class="col-sm-3 col-form-label text-sm-end" for="prenoms">Prénoms</label>
                                                        <div class="col-sm-9">
                                                            <input class="form-control" id="prenoms" type="text" asp-for="@Model.EmployeResource.Prenoms" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <div class="row">
                                                            <label class="col-sm-3 col-form-label text-sm-end" for="collapsible-pincode">Utilisateur</label>
                                                            <div class="col-sm-9">
                                                                <select id="username" class="select2 form-select" asp-for="@Model.EmployeResource.Username">
                                                                    @foreach (var item in users)
                                                                    {
                                                                        <option value="@item.Username">@item.Username</option>
                                                                    }
                                                                   
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>                                        
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <div class="row">
                                                            <label class="col-sm-3 col-form-label text-sm-end" for="collapsible-pincode">Département</label>
                                                            <div class="col-sm-9">
                                                                <select id="departement" class="select2 form-select" asp-for="@Model.EmployeResource.DepartementId">
                                                                    @foreach (var item in departments)
                                                                    {
                                                                        <option value="@item.Id">@item.Libelle</option>
                                                                    }

                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="d-flex justify-content-center">
                                                    <button type="submit" class="btn btn-primary me-sm-3 me-1" id="submit">Submit</button>
                                                    <button type="reset" class="btn btn-label-secondary">Cancel</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>                                 
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section VendorScripts{
    <script src="~/vendor/libs/bs-stepper/bs-stepper.dist.js"></script>
    <script src="~/vendor/libs/select2/select2.dist.js"></script>
    <script src="~/vendor/libs/cleavejs/cleave.dist.js"></script>
    <script src="~/vendor/libs/cleavejs/cleave-phone.dist.js"></script>
    <script src="~/vendor/libs/tagify/tagify.dist.js"></script>
    <script src="~/vendor/libs/block-ui/block-ui.dist.js"></script>
    <script src="~/vendor/libs/toastr/toastr.dist.js"></script>
    <script src="~/vendor/libs/sweetalert2/sweetalert2.dist.js"></script>
    <script src="~/vendor/libs/select2/select2.dist.js"></script>
}

@section PageScripts {
    <script src="~/js/form-layouts.dist.js"></script>
    <script>
        $(function () {
            var form = window.$('#myForm'),
                btn = window.$('#submit'),
                //indice = $('#indice'),
                //tel = $('#tel'),
                title = '',
                message = '',
                errorTitle = new DOMParser().parseFromString('Erreur', 'text/html').body.innerHTML,
                errorTypeMessage = 'error',
                errorMessage = new DOMParser().parseFromString('Erreur Produite', 'text/html').body.innerHTML,
                errorDescription = '',
                errorTimeOut = 500000,
                errors = [];

            form.on("submit",
                function (event) {
                    event.preventDefault();
                    var data = window.$(this).serialize();
                    var url = window.$(this).attr("action");
                    console.log(data);
                    window.$.ajax({
                        url: url,
                        type: "POST",
                        dataType: "json",
                        data: data,
                        beforeSend: function () {
                            btn.attr('disabled', 'disabled');
                            window.$.blockUI({
                                message: '<div class="spinner-border text-primary" role="status"></div>',
                                css: {
                                    backgroundColor: 'transparent',
                                    border: '0'
                                },
                                overlayCSS: {
                                    backgroundColor: '#fff',
                                    opacity: 0.8
                                }
                            });
                        },
                        success: function (response) {
                            console.log(response);
                            if (response.typeMessage === "error") {
                                window.toastr[response.typeMessage]('👋 ' + 'Erreur',
                                    {
                                        showMethod: 'slideDown',
                                        hideMethod: 'slideUp',
                                        closeButton: true,
                                        tapToDismiss: false,
                                        progressBar: true,
                                        timeOut: response.timeOut,
                                        rtl: window.$('html').attr('data-textdirection') === 'rtl',
                                        onHidden: function () { }
                                    });
                            }
                            //var strJson = JSON.parse(response.strJson);
                            //var nom = strJson.Nom;
                            //var prenoms = strJson.Prenoms;
                            //$('#username').val(strJson.Username);
                            message = new DOMParser().parseFromString(response.message, 'text/html').body.innerHTML;
                            window.toastr[response.typeMessage]('👋 ' + message,
                                response.title,
                                {
                                    showMethod: 'slideDown',
                                    hideMethod: 'slideUp',
                                    closeButton: true,
                                    tapToDismiss: false,
                                    progressBar: true,
                                    timeOut: response.timeOut,
                                    rtl: window.$('html').attr('data-textdirection') === 'rtl',
                                    onHidden: function () { }
                                });

                        },
                        error: function (response) {
                            try {

                                var obj = JSON.parse(JSON.stringify(response.responseJSON));
                                if (obj.length !== 0) {
                                    if (response.status === 401) {
                                        message = new DOMParser().parseFromString('Non autorisé', 'text/html').body.innerHTML;
                                        window.toastr[errorTypeMessage]('👋 ' + message,
                                            errorTitle,
                                            {
                                                showMethod: 'slideDown',
                                                hideMethod: 'slideUp',
                                                closeButton: true,
                                                tapToDismiss: false,
                                                progressBar: true,
                                                timeOut: errorTimeOut,
                                                rtl: window.$('html').attr('data-textdirection') === 'rtl'
                                            });
                                    }
                                    else {
                                        if (obj.typeMessage != null && obj.typeMessage !== undefined) {
                                            if (response.status === 0) {
                                            } else if (response.status === 400 || response.status === 404 || response.status === 405 || response.status === 500) {
                                                errorTitle = obj.title;
                                                errorTypeMessage = obj.typeMessage;
                                                errorMessage = obj.message;
                                                errorDescription = obj.description;
                                                errorTimeOut = obj.timeOut;
                                                if (obj.erreurs != null && obj.erreurs != undefined) errors = obj.erreurs;
                                            }
                                            if (errors !== null && errors !== undefined && errors.length > 0) {
                                                var messages = '';
                                                if (errors.length == 1) {
                                                    messages = errors;
                                                }
                                                else {
                                                    for (var i = 0; i < errors.length; i++) {
                                                        messages += errors[i] + "<br>";
                                                    }
                                                    messages = messages.slice(0, -4);
                                                }
                                                errorMessage = new DOMParser().parseFromString(messages, 'text/html').body.innerHTML;

                                            } else if (errorDescription !== null && errorDescription !== undefined) {
                                                errorMessage = new DOMParser().parseFromString(errorDescription, 'text/html').body.innerHTML;
                                            } else {
                                                errorMessage = new DOMParser().parseFromString(errorMessage, 'text/html').body.innerHTML;
                                            }
                                            window.toastr[errorTypeMessage]('👋 ' + errorMessage,
                                                errorTitle,
                                                {
                                                    showMethod: 'slideDown',
                                                    hideMethod: 'slideUp',
                                                    closeButton: true,
                                                    tapToDismiss: false,
                                                    progressBar: true,
                                                    timeOut: errorTimeOut,
                                                    rtl: window.$('html').attr('data-textdirection') === 'rtl'
                                                }
                                            );
                                        }
                                    }
                                }
                            } catch (err) {
                                window.toastr[errorTypeMessage]('👋 ' + err,
                                    errorTitle,
                                    {
                                        showMethod: 'slideDown',
                                        hideMethod: 'slideUp',
                                        closeButton: true,
                                        tapToDismiss: false,
                                        progressBar: true,
                                        timeOut: errorTimeOut,
                                        rtl: window.$('html').attr('data-textdirection') === 'rtl'
                                    }
                                );
                            }
                        },
                        complete: function () {
                            btn.removeAttr('disabled');
                            window.$.unblockUI();
                        }
                    });
                });
        });
    </script>
}



